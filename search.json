[{"title":"约定式提交三部曲","url":"/2025/04/13/Conventional-Commits/","content":"## 概述\n\n","categories":["前端开发"]},{"title":"记录这一段时间了解的node.js工具,做一个总结","url":"/2025/04/09/NodejsTool-Tutorial/","content":"Ciallo～(∠・ω < )⌒★众所周知,Node.js 是一个开源的、跨平台的 JavaScript 运行时环境,简单来讲就是一个js运行环境，一个软件，本文将对node.js工具进行相关介绍与使用,帮助你更好的使用node.js\n## 工具概述:\n- [nrm](#nrm)\n- [nvm](#nvm)\n- [volta](#volta)\n## 工具的安装与使用\n\n### nrm\n**介绍：nrm 的全称是 npm registry manager ，是一个 npm 的镜像源管理工具**\n#### 安装\n**前提是你已经安装了node.js,如果没有安装那就看[nvm](#nvm)这节,[volta](#volta)这节也行,更傻瓜式,安装完之后再来安装nrm**\n___\n##### 安装nvm \n首先按快捷键Win+R打开运行窗口，再输入cmd回车\n然后我们全局安装一下nrm\n``` bash\nnpm i nrm -g\n```\n接着查看一下版本号，看是否安装成功，如果输出版本号代表安装成功\n``` bash\nnrm -V\n```\n#### 使用\n##### 查看镜像源\n**查看所有可用镜像源**\n```bash\nnrm ls\n```\n结果如下:\n```md\n* npm ---------- https://registry.npmjs.org/\n  yarn --------- https://registry.yarnpkg.com/\n  tencent ------ https://mirrors.tencent.com/npm/\n  cnpm --------- https://r.cnpmjs.org/\n  taobao ------- https://registry.npmmirror.com/\n  npmMirror ---- https://skimdb.npmjs.com/registry/\n  huawei ------- https://repo.huaweicloud.com/repository/npm/\n```\n##### 切换镜像源\n这里就比如说我要切换淘宝的镜像源，就是这样,其余同理\n```bash\nnrm use taobao\n```\n### nvm\n**介绍：nvm 允许您通过命令行快速安装和使用不同版本的 node**\n\n#### 安装\n**前提是你电脑没有安装node.js,如果有那就把node.js卸载再安装nvm,这里我推荐一个工具:[点击下载工具](/downloads/GeekUninstaller_v1.5.1.162单文件版.exe)   \n如果已经卸载了，但没有卸载干净可以看看以下文件夹及文件是否存在，如果存在就删除这些文件夹及文件，还有环境变量里面关于node和npm的都删掉**\n* C:\\Program Files (x86)\\Nodejs\n* C:\\Program Files\\Nodejs\n* C:\\Users\\用户名\\AppData\\Roaming\\npm\n* C:\\Users\\用户名\\AppData\\Roaming\\npm-cache\n* 删除C:\\Users\\用户名 下的 .npmrc文件以及 .yarnrc 文件\n___\n**下面是手动安装配置的教程，如果嫌麻烦可以用客户端进行可视化操作，客户端下载地址:[nvm-desktop](https://github.com/1111mp/nvm-desktop/releases/tag/v4.0.7)，直接无脑安装即可,\n如果是国内再把镜像地址换成淘宝镜像进行加速，如果安装了node.js没生效可以重启一下**\n```md\nhttps://npmmirror.com/mirrors/node/\n```\n![](/images/nvm17.png)\n___\n**手动安装配置教程如下:**\n##### 下载nvm包\n首先到github下载nvm,地址：[nvm下载](https://github.com/coreybutler/nvm-windows/releases/tag/1.2.2)\n然后这两个二选一\n![](/images/nvm.png)\n##### 安装nvm\n下载下来接着进行安装,(注：这里不建议放在c盘，D盘或者E盘都可以的且路径不能有中文或空格)\n![](/images/nvm2.png)\n这里是`nvm安装路径`，配置好了之后直接点Next\n![](/images/nvm3.png)\n这里是`node.js安装路径`,配置好了之后直接点Next\n![](/images/nvm4.png)\n全部下一步即可,然后我们就完成安装了，接下来配置下载镜像\n![](/images/nvm5.png)\n![](/images/nvm6.png)\n![](/images/nvm7.png)\n##### 配置下载镜像\n找到你nvm的安装目录，然后找到`settings.txt`这个文件\n接着填写两段代码即可\n```md\nnode_mirror: https://npmmirror.com/mirrors/node/\nnpm_mirror: https://npmmirror.com/mirrors/npm/\n```\n![](/images/nvm8.png)\n![](/images/nvm9.png)\n##### 指定全局安装目录和缓存目录\n为了让全局安装的包在切换版本之后依旧能够使用，我们得指定一下`全局安装目录`和`缓存目录`，让所有node.js版本都能使用这些包\n **一定要先看[使用](#使用-1),用nvm安装一个node.js,再来配置环境变量**\n___                \n首先找到你nodejs的安装目录,然后在nodejs文件夹里新建`node_global`和`node_cache`这两个文件夹\n![](/images/nvm11.png)\n接着按快捷键Win+R打开运行窗口，再输入cmd回车\n* 输入你的node安装目录\\node_global\n```bash\nnpm config set prefix \"E:\\nvm\\nodejs\\node_global\"\n```\n* 输入你的node安装目录\\node_cache\n```bash\nnpm config set cache \"E:\\nvm\\nodejs\\node_cache\"\n```\n再输入这两行命令,如果输出了路径代表配置成功\n```bash\nnpm config get prefix\nnpm config get cache\n```\n#### 使用\n##### 查看可安装的node版本\n``` bash\nnvm list available\n```\n![](/images/nvm12.png)\n##### 安装node.js\n首先按快捷键Win+R打开运行窗口，再输入cmd回车\n这里就比如说我要安装20.19.0的node.js(默认推荐`lts`版本的)，就是这样,其余同理\n``` bash\nnvm install 20.19.0\n```\n![](/images/nvm13.png)\n然后你就可以使用你下载下来的node.js\n``` bash\nnvm use 20.19.0\n```\n![](/images/nvm14.png)\n接着查看node版本号和npm版本号,如果输出版本号代表安装成功\n``` bash\nnode -v #查看node版本\nnpm -v #查看npm版本\n```\n![](/images/nvm15.png)\n##### 查看已安装的node版本\n`*`代表正在使用\n```bash\nnvm ls\n```\n![](/images/nvm16.png)\n##### 卸载已安装的node版本\n这里就比如说我要卸载20.19.0的node版本，就是这样,其余同理\n```bash\nnvm uninstall 20.19.0\n```\n### volta\n**介绍：volta可以轻松切换项目，无需手动切换 Node，更傻瓜式**\n* **`volta`和`nvm`的对比表**\n![](/images/volta.png)\n#### 安装\n首先按快捷键Win+R打开运行窗口，再输入cmd回车\n```bash\nwinget install Volta.Volta\n```\n![](/images/volta2.png)\n如果安装不下来，也有msi安装包可以安装,地址：[volta下载](https://github.com/volta-cli/volta/releases/tag/v2.0.2)\n![](/images/volta3.png)\n#### 使用\n##### 安装node.js\n比如说我要下载20.19.0版本的node就是这样\n```bash\n volta install node@20.19.0\n```\n* 安装最新`lts`版本的node\n```bash\n volta install node\n```\n* 安装最新版本的node\n```bash\n volta install node@latest\n```\n##### 项目固定node版本和包管理器版本\n* 固定node版本\n```bash\n volta pin node@20.19.0\n```\n* 固定包管理器版本，这里我举例的是npm\n```bash\n volta pin npm@10.8.2\n```\n![](/images/volta4.png)\n然后就会自动在package.json创建配置项，它就会自动切换版本了\n![](/images/volta5.png)\n##### 查看所有已安装工具版本\n首先按快捷键Win+R打开运行窗口，再输入cmd回车\n输入这行命令\n```bash\nvolta list all\n```\n![](/images/volta6.png)\n* 查看已安装node版本\n如果你只想查看已安装的node版本就是这样\n`default`代表默认node版本\n```bash\nvolta list node\n```\n![](/images/volta7.png)\n##### 卸载已安装node版本\n卸载已安装node版本,volta只支持卸载默认node版本，如果你想卸载的版本不是默认版本，可以把node版本切换为默认版本之后再卸载\n* 切换默认node版本\n这里就比如说我要切换20.19.0版本为默认版本，就是这样\n```bash\nvolta pin node@20.19.0 --global\n```\n然后就可以卸载了\n* 卸载node版本\n这里就比如说我要卸载20.19.0的node版本，就是这样\n```bash\nvolta uninstall node@20.19.0\n```\n\n","tags":["node.js"],"categories":["前端开发"]}]